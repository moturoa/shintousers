% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/users_r6_object.R
\name{shintoUser}
\alias{shintoUser}
\title{A User object for use in Shinto apps}
\value{
Returns (invisibly) the last login information
}
\description{
Make a database connection to 'shintousers' and access all kinds of 
methods for user management. In Shiny apps, use `get_and_set_last_login`, for example.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{con}}{The DB connection to `shintousers`}

\item{\code{schema}}{The postgres schema in the DB}

\item{\code{dbusername}}{The DB user name}

\item{\code{userid}}{The application (shiny) user name}

\item{\code{appname}}{The (rsconnect) application name}

\item{\code{appversion}}{Version of the app (optionally read from VERSION)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ShintoUsers-new}{\code{shintoUser$new()}}
\item \href{#method-ShintoUsers-to_json}{\code{shintoUser$to_json()}}
\item \href{#method-ShintoUsers-from_json}{\code{shintoUser$from_json()}}
\item \href{#method-ShintoUsers-close}{\code{shintoUser$close()}}
\item \href{#method-ShintoUsers-query}{\code{shintoUser$query()}}
\item \href{#method-ShintoUsers-execute_query}{\code{shintoUser$execute_query()}}
\item \href{#method-ShintoUsers-append_data}{\code{shintoUser$append_data()}}
\item \href{#method-ShintoUsers-read_table}{\code{shintoUser$read_table()}}
\item \href{#method-ShintoUsers-get_last_login}{\code{shintoUser$get_last_login()}}
\item \href{#method-ShintoUsers-set_last_login}{\code{shintoUser$set_last_login()}}
\item \href{#method-ShintoUsers-get_and_set_last_login}{\code{shintoUser$get_and_set_last_login()}}
\item \href{#method-ShintoUsers-app_has_user}{\code{shintoUser$app_has_user()}}
\item \href{#method-ShintoUsers-get_role}{\code{shintoUser$get_role()}}
\item \href{#method-ShintoUsers-set_role}{\code{shintoUser$set_role()}}
\item \href{#method-ShintoUsers-get_group}{\code{shintoUser$get_group()}}
\item \href{#method-ShintoUsers-is_in_group}{\code{shintoUser$is_in_group()}}
\item \href{#method-ShintoUsers-set_group}{\code{shintoUser$set_group()}}
\item \href{#method-ShintoUsers-remove_role}{\code{shintoUser$remove_role()}}
\item \href{#method-ShintoUsers-has_role}{\code{shintoUser$has_role()}}
\item \href{#method-ShintoUsers-add_application}{\code{shintoUser$add_application()}}
\item \href{#method-ShintoUsers-set_application_roles}{\code{shintoUser$set_application_roles()}}
\item \href{#method-ShintoUsers-set_application_groups}{\code{shintoUser$set_application_groups()}}
\item \href{#method-ShintoUsers-get_application_roles}{\code{shintoUser$get_application_roles()}}
\item \href{#method-ShintoUsers-get_application_groups}{\code{shintoUser$get_application_groups()}}
\item \href{#method-ShintoUsers-get_applications}{\code{shintoUser$get_applications()}}
\item \href{#method-ShintoUsers-remove_application}{\code{shintoUser$remove_application()}}
\item \href{#method-ShintoUsers-log_timing}{\code{shintoUser$log_timing()}}
\item \href{#method-ShintoUsers-clone}{\code{shintoUser$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-new"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-new}{}}}
\subsection{Method \code{new()}}{
Make new shintousers object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$new(
  dbusername = NULL,
  dbname = NULL,
  schema = "shintousers",
  userid = NULL,
  appname = "",
  appversion = "",
  con = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dbusername}}{Username in database 'shintousers'}

\item{\code{dbname}}{Name of database (usually 'shintousers')}

\item{\code{schema}}{Database schema with tables 'roles', 'users', 'logins'}

\item{\code{userid}}{rsconnect username, if not NULL it is stored and used for all methods (handy inside an app)}

\item{\code{appname}}{rsconnect application name}

\item{\code{appversion}}{Optional, application version string}

\item{\code{con}}{Optional, existing database connection to shintousers (for recycling)}

\item{\code{...}}{Further arguments passed to [users_db_connection()]}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A 'shintousers' R6 object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-to_json"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-to_json}{}}}
\subsection{Method \code{to_json()}}{
Convert to JSON
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$to_json(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{An object to convert to JSON}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-from_json"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-from_json}{}}}
\subsection{Method \code{from_json()}}{
Convert to JSON
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$from_json(txt)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{txt}}{Text string, JSON}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-close"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-close}{}}}
\subsection{Method \code{close()}}{
Close the DB connection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$close()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-query"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-query}{}}}
\subsection{Method \code{query()}}{
Do a `dbGetQuery` on the `shintousers` DB (accepts glue)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$query(txt, glue = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{txt}}{Query string}

\item{\code{glue}}{If true, attempts to 'glue'}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-execute_query"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-execute_query}{}}}
\subsection{Method \code{execute_query()}}{
Do a `dbExecute` on the `shintousers` DB (accepts glue)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$execute_query(txt, glue = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{txt}}{Query string}

\item{\code{glue}}{If true, attempts to 'glue'}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-append_data"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-append_data}{}}}
\subsection{Method \code{append_data()}}{
`dbWriteTable(..., append = TRUE)`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$append_data(table, data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{table}}{table name (without schema)}

\item{\code{data}}{dataframe}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-read_table"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-read_table}{}}}
\subsection{Method \code{read_table()}}{
Read a table (from the default schema)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$read_table(table, lazy = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{table}}{table name (without schema)}

\item{\code{lazy}}{If true, returns a 'lazy table' (dbplyr)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-get_last_login"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-get_last_login}{}}}
\subsection{Method \code{get_last_login()}}{
Get last login for this user for this application (reads `shintousers.logins`)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$get_last_login(userid = NULL, appname = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{userid}}{rsconnect username}

\item{\code{appname}}{rsconnect application name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-set_last_login"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-set_last_login}{}}}
\subsection{Method \code{set_last_login()}}{
Update the last login for this user / appname (in table `shintousers.logins`)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$set_last_login(
  now = as.character(Sys.time()),
  userid = NULL,
  appname = NULL,
  appversion = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{now}}{Optional, time string (defaults to sys time)}

\item{\code{userid}}{rsconnect username (can be NULL, uses userid on init)}

\item{\code{appname}}{rsconnect application name}

\item{\code{appversion}}{application version string}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-get_and_set_last_login"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-get_and_set_last_login}{}}}
\subsection{Method \code{get_and_set_last_login()}}{
Reads last login, and sets the current time as the new 'last login'.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$get_and_set_last_login(
  userid = NULL,
  appname = NULL,
  appversion = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{userid}}{rsconnect username (can be NULL, uses userid on init)}

\item{\code{appname}}{rsconnect application name}

\item{\code{appversion}}{application version string}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
If user has never logged in, writes a new line in `shintousers.logins`,
otherwise updates the last login.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-app_has_user"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-app_has_user}{}}}
\subsection{Method \code{app_has_user()}}{
Does an app have a user configured?
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$app_has_user(userid, appname)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{userid}}{rsconnect username (can be NULL, uses userid on init)}

\item{\code{appname}}{rsconnect application name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-get_role"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-get_role}{}}}
\subsection{Method \code{get_role()}}{
Gets the role for the current user (admin or viewer, typically)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$get_role(userid = NULL, appname = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{userid}}{rsconnect username (can be NULL, uses userid on init)}

\item{\code{appname}}{rsconnect application name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-set_role"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-set_role}{}}}
\subsection{Method \code{set_role()}}{
Sets the role for a user.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$set_role(userid, appname, role)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{userid}}{rsconnect username (can be NULL, uses userid on init)}

\item{\code{appname}}{rsconnect application name}

\item{\code{role}}{The user role, typically 'admin', 'viewer'}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
!! Do not use in shiny applications (except shintousers_app) !!
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-get_group"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-get_group}{}}}
\subsection{Method \code{get_group()}}{
Get groups that the current user belongs to. See also `is_in_group`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$get_group(userid = NULL, appname = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{userid}}{rsconnect username (can be NULL, uses userid on init)}

\item{\code{appname}}{rsconnect application name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-is_in_group"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-is_in_group}{}}}
\subsection{Method \code{is_in_group()}}{
Is the user in this group? `$is_in_group("superuser")` -> bool
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$is_in_group(group)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{group}}{Group name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-set_group"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-set_group}{}}}
\subsection{Method \code{set_group()}}{
Set the group for this user.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$set_group(userid, appname, group)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{userid}}{rsconnect username (can be NULL, uses userid on init)}

\item{\code{appname}}{rsconnect application name}

\item{\code{group}}{Group name}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
!! Do not use in shiny applications (except shintousers_app) !!
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-remove_role"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-remove_role}{}}}
\subsection{Method \code{remove_role()}}{
Remove a role for a user
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$remove_role(userid, appname)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{userid}}{rsconnect username (can be NULL, uses userid on init)}

\item{\code{appname}}{rsconnect application name}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
!! Do not use in shiny applications (except shintousers_app) !!
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-has_role"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-has_role}{}}}
\subsection{Method \code{has_role()}}{
Does the current user have a role? `$has_role("admin")` --> bool
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$has_role(role)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{role}}{The user role, typically 'admin', 'viewer'}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-add_application"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-add_application}{}}}
\subsection{Method \code{add_application()}}{
Add an application to the list of applications
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$add_application(appname, roles, groups, comment = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{appname}}{The rsconnect application name}

\item{\code{roles}}{The choices for user roles, typically c('admin','viewer')}

\item{\code{groups}}{The choices for application groups, can be anything}

\item{\code{comment}}{Any other text (unused as of 11/2022)}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
!! Do not use in shiny applications (except shintousers_app) !!
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-set_application_roles"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-set_application_roles}{}}}
\subsection{Method \code{set_application_roles()}}{
Set application available roles
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$set_application_roles(appname, roles)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{appname}}{The rsconnect application name}

\item{\code{roles}}{The choices for user roles, typically c('admin','viewer')}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
!! Do not use in shiny applications (except shintousers_app) !!
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-set_application_groups"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-set_application_groups}{}}}
\subsection{Method \code{set_application_groups()}}{
Set groups available in an application
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$set_application_groups(appname, groups)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{appname}}{The rsconnect application name}

\item{\code{groups}}{The choices for application groups, can be anything}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
!! Do not use in shiny applications (except shintousers_app) !!
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-get_application_roles"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-get_application_roles}{}}}
\subsection{Method \code{get_application_roles()}}{
Get available roles for an application
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$get_application_roles(appname)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{appname}}{The rsconnect application name}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
!! Do not use in shiny applications (except shintousers_app) !!
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-get_application_groups"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-get_application_groups}{}}}
\subsection{Method \code{get_application_groups()}}{
Add an application to the list of applications
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$get_application_groups(appname)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{appname}}{The rsconnect application name}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
!! Do not use in shiny applications (except shintousers_app) !!
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-get_applications"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-get_applications}{}}}
\subsection{Method \code{get_applications()}}{
Get list of available applications
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$get_applications()}\if{html}{\out{</div>}}
}

\subsection{Details}{
!! Do not use in shiny applications (except shintousers_app) !!
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-remove_application"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-remove_application}{}}}
\subsection{Method \code{remove_application()}}{
Remove an application
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$remove_application(appname)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{appname}}{The rsconnect application name}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
!! Do not use in shiny applications (except shintousers_app) !!
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-log_timing"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-log_timing}{}}}
\subsection{Method \code{log_timing()}}{
Log a timing. Writes data to 'timings' table in shintousers, with appname, key and
double precision value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$log_timing(key, timing)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShintoUsers-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ShintoUsers-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shintoUser$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
